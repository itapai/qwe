name: Build matrix

on:
  push:
    tags:
      - 'v*.*.*'
      - '!v*.*.*-dev*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "tests are ok. wink wink"

  build:
    name: Build
    needs: [ test ]
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: web
          - os: windows-latest
            target: windows
          # - os: ubuntu-latest
          #   target: apk
          # - os: macos-latest
          #   target: ios
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

      - run: flutter --version
      - run: flutter build ${{ matrix.target }}

      - name: Configure windows
        if: contains(runner.os, 'windows')
        run: |
          echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - run: make ci-${{ matrix.target }} version=${{ github.ref_name }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/dist

  draft-release:
    name: Draft new release
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Is this release or prerelease
        id: version
        run: |
          if [[ ${{ github.ref_name }} == *-* ]]
          then echo "::set-output name=IS_PRERELEASE::true"
          else echo "::set-output name=IS_RELEASE::true"
          fi

      - name: Configure Github CLI
        run: |
          gh config set prompt disabled

      - name: Create new prerelease
        if: ${{ steps.version.outputs.IS_PRERELEASE == 'true' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create --draft --prerelease --title "Prerelease ${{ github.ref_name }}" ${{ github.ref_name }} --repo ${{ github.repository }}

      - name: Create new release
        if: ${{ steps.version.outputs.IS_RELEASE == 'true' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create --draft --title "Release ${{ github.ref_name }}" ${{ github.ref_name }} --repo ${{ github.repository }}

      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - run: tree

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} **/*.* --repo ${{ github.repository }}
